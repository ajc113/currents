<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>
var map;

function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
        zoom: 9,
        center: {
            lat: 42.05,
            lng: -70.25
        },
        mapTypeId: google.maps.MapTypeId.SATELLITE,
        scrollwheel: false,
        scaleControl: false,
    });
    var polygons = [];
    $.ajax({
        async: true,
        url: '<%= species_filter_path %>',
        type: "get", //send it through get method
        data: {
            species: $('#species_select').val()
        },
        success: function(response) {
            for (var i = 0; i < response.length; i++) {
                polygons.push(new google.maps.Polygon({
                    paths: response[i].coordinate_file,
                    strokeColor: '#F7F8FF',
                    strokeOpacity: 0.8,
                    strokeWeight: .35,
                    fillColor: response[i].color,
                    fillOpacity: 0.45,
                    editable: false,
                    map: map,
                    loc: response[i].location,
                    rep: response[i].reports,
                    moving_average: response[i].moving_average
                }));
                polygons[polygons.length - 1].setMap(map);
                var p = polygons[i];
                google.maps.event.addListener(p, 'click', function(event) {
                    var contentString = '<table><thead><tr><th>Date</th><th>Target Species</th><th>Vessel Name</th><th>Primary Method</th><th>Catch Total</th><th>Trip Summary</th></tr></thead><tbody><b>' + this.loc.short_name + '</b> <br>' + this.loc.long_name + '<br> <br>';
                    for (var j = 0; j < this.rep.length; j++) {
                        contentString += '<tr><td>' + this.rep[j].rep.date + '</td> <td>' + this.rep[j].rep.species + '</td><td>' + this.rep[j].vessel_name + '</td><td>' + this.rep[j].rep.primary_method + '</td><td>' + this.rep[j].rep.catch_total + '</td><td>' + this.rep[j].rep.trip_summary + '</td></tr>';
                    };
                    contentString += '</tbody></table>';
                    infoWindow = new google.maps.InfoWindow({
                        disableAutoPan: false
                    });
                    if (infoWindow) infoWindow.close();
                    infoWindow.setContent(contentString);
                    infoWindow.setPosition(event.latLng);
                    google.maps.event.addListener(infoWindow, 'domready', function() {
                        var iwOuter = $('.gm-style-iw');

                        var gmStyleTable = $('.gm-style-iw').children(':nth-child(1)').addClass('gm-style-table');

                        gmStyleTable.css({
                            'display': 'table-row',
                            'width': '100%'
                        });

                        /* The DIV we want to change is above the .gm-style-iw DIV.
                         * So, we use jQuery and create a iwBackground variable,
                         * and took advantage of the existing reference to .gm-style-iw for the previous DIV with .prev().
                         */
                        var iwBackground = iwOuter.prev();
                        // Remove the background shadow DIV
                        iwBackground.children(':nth-child(2)').css({
                            'display': 'none'
                        });
                        // Remove the white background DIV
                        iwBackground.children(':nth-child(4)').css({
                            'display': 'none'
                        });
                        iwBackground.children(':nth-child(3)').find('div').children().css({
                            'box-shadow': 'rgba(72, 181, 233, 0.6) 0px 1px 6px',
                            'z-index': '1'
                        });
                        var iwCloseBtn = iwOuter.next();
                        // Apply the desired effect to the close button
                        iwCloseBtn.addClass('close-button');
                        if ($(window).width() >= 768) {
                            iwCloseBtnCss = "44px";
                        } else {
                            iwCloseBtnCss = "-15px";
                            $('.close-button').next().css({
                                right: "-15px",
                            });
                        };
                        iwCloseBtn.css({
                            opacity: '1', // by default the close button has an opacity of 0.7
                            top: '8px', // button repositioning
                            right: iwCloseBtnCss,
                            // border: '7px solid #48b5e9', // increasing button border and new color
                            'border-radius': '13px', // circular effect
                            'box-shadow': '0 0 5px #3990B9' // 3D effect to highlight the button
                        });
                        // The API automatically applies 0.7 opacity to the button after the mouseout event.
                        // This function reverses this event to the desired value.
                        iwCloseBtn.mouseout(function() {
                            $(this).css({
                                opacity: '1'
                            });
                        });
                    });

                    // // create a variable to hold center
                    // var center;
                    // // calculate the center with getCenter
                    // function calculateCenter() {
                    //     center = map.getCenter();
                    // }
                    // // Add an event listener that calculates center on idle  
                    // google.maps.event.addDomListener(map, 'idle', function() {
                    //     calculateCenter();
                    // });
                    // // Add an event listener that calculates center on resize  

                    // google.maps.event.addDomListener(window, 'resize', function() {
                    //     map.setCenter(center);
                    // });
                    infoWindow.open(map);
                });

                google.maps.event.addListener(p, 'mouseover', function(event) {
                    $("#locdetails").css("display", "block");
                    $("#locdetails").append("<div class='hoverrow'> <div class='hoverclass'>Location</div> <div class='hoverclass'>Average Catch Per Trip</div> <div class='hoverclass'>Reports posted past 7 days</div> </div> <br> <div class='hoverrow'><div class='hoverclass'>" + this.loc.short_name + "</div>" + "<div class='hoverclass'>" + this.mavg + "</div>" + "<div class='hoverclass'>" + this.rep.length + "</div></div>");
                    map.data.revertStyle();
                    this.setOptions({
                        strokeColor: '#F7F8FF',
                        strokeWeight: 3,
                        fillOpacity: 0.75
                    });
                });
                google.maps.event.addListener(p, 'mouseout', function(event) {
                    $("#locdetails").css("display", "none");
                    $("#locdetails").empty();
                    map.data.revertStyle();
                    this.setOptions({
                        strokeColor: '#F7F8FF',
                        strokeOpacity: 0.8,
                        strokeWeight: .35,
                        fillOpacity: 0.5,
                    });
                });
            };
        },
        error: function(xhr) {
            //Do Something to handle error
        }
    });
}

$('#species_select').change(function() {
    initMap();
    infoWindow.close();
});
